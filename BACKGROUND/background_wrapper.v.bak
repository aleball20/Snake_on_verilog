module background_wrapper (CLOCK_50, KEY, VGA_R, VGA_G, VGA_B, VGA_HS, VGA_VS, VGA_SYNC, VGA_BLANK, VGA_CLK, game_data, game_enable,);
input CLOCK_50, KEY;
input game_enable;
input [1:0] game_data;
output [9:0] VGA_R, VGA_G, VGA_B;
output VGA_HS, VGA_VS, VGA_BLANK, VGA_SYNC, VGA_CLK;
wire clock_25, display_area;
wire [9:0] X,Y;
wire y_count, data, datarom;
assign VGA_BLANK=1'b1;
assign VGA_SYNC= 1'b0;
assign VGA_CLK= clock_25;

vga_wrapper my_vga_wrapper(
    .CLOCK_50(CLOCK_50), 
    .KEY(KEY),
    .VGA_R (VGA_R),
   .VGA_G (VGA_G),
    .VGA_B(VGA_B),
    .VGA_HS (VGA_HS),
    .VGA_VS (VGA_VS), 
    .VGA_SYNC (VGA_SYNC), 
    .VGA_BLANK(VGA_BLANK), 
    .VGA_CLK (VGA_CLK), 
    .game_data(game_data), 
    .game_enable (game_enable),
    .datarom (datarom));

background my_background(
    .X (X),
    .Y (Y),
    .data (data),
    .y_count (y_count), 
    .datarom (datarom));

rom_background my_rom_background(
    .X (X),
    .y_count (y_count), 
    .data(data)
);

    
endmodule